upstream datalab {
    server app:8081;
}

upstream pydatalab {
    server api:5001;
}

map $remote_addr $internal {
  default 0;
  127.0.0.1 1;
  212.159.87.162 1;
}

# App server
server {
  listen 443 ssl;
  include nginx_ssl.conf;

  client_max_body_size 500M;

  # set the correct host(s) for your site
  server_name www.datalab.odbx.science datalab.odbx.science;

  location /503.html {
    root /app/static;
  }

  location / {

    set $maintenance 0;
    if (-f /etc/nginx/static/datalab_maintenance_on) {
       set $maintenance 1;
    }
    if ($internal != 1) {
      set $maintenance "${maintenance}1";
    }
    if ($maintenance = 11) {
      return 503;
    }

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://datalab;
  }

  error_page 503 /503.html;

}

# API server
server {
  listen 443 ssl;
  include nginx_ssl.conf;
  client_max_body_size 500M;

  # set the correct host(s) for your site
  server_name www.api.odbx.science api.odbx.science;

  location /503.html {
    root /app/static;
  }

  location / {
    set $maintenance 0;
    if (-f /etc/nginx/static/datalab_maintenance_on) {
       set $maintenance 1;
    }
    if ($internal != 1) {
      set $maintenance "${maintenance}1";
    }
    if ($maintenance = 11) {
      return 503;
    }

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://pydatalab;
  }
  error_page 503 /503.html;
}
