# Quick description of this server:
#
# There are 3 gunicorn servers running over unix sockets:
# - OPTIMADE REST (optimade.odbx.science)
# - OPTIMADE Index REST (optimade-index.odbx.science)
# - odbx GUI (odbx.science)
#
# Any HTTP request gets redirected to the appopriate server
# over HTTPS by matching the server names.
#
# Each HTTPS server block must have a location for certbot's
# ACME challenge so that HTTPS certificates can be updated
# automatically.
#

worker_processes 1;
user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead

pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  sendfile on;
  include mime.types;

  # Add some security headers
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;";
  add_header X-Frame-Options "DENY";
  add_header X-XSS-Protection "1; mode=block;";
  add_header X-Content-Type-Options "nosniff;";


  upstream gunicorn {
    server unix:/tmp/gunicorn.sock fail_timeout=0;
  }

  upstream gunicorn_rest {
    server unix:/tmp/gunicorn_rest.sock fail_timeout=0;
  }

  upstream gunicorn_index {
    server unix:/tmp/gunicorn_index.sock fail_timeout=0;
  }

  upstream gunicorn_rest_test {
    server unix:/tmp/gunicorn_rest_test.sock fail_timeout=0;
  }

  upstream datalab {
    server app:8081;
  }

  upstream pydatalab {
    server api:5001;
  }

  server {
      listen 80;
      listen [::]:80 default_server;
      server_name _;

      location ~ /.well-known/acme-challenge {
          root /var/www/certbot;
          allow all;
      }

       return 301 https://$host$request_uri;
  }

  server {
      #listen 443 ssl default_server;
      listen [::]:443 ssl default_server;
      server_name _;

      ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
      ssl_session_tickets off;

      return 404;
  }

# HTML SERVER CONFIGURATION
  server {
    listen 443 ssl;
    add_header Content-Security-Policy "default-src https: 'unsafe-eval' 'unsafe-inline'; font-src https://fonts.gstatic.com https://fonts.googleapis.com; style-src https://fonts.googleapis.com https://cdnjs.cloudflare.com 'unsafe-inline' 'self'; img-src https://avatars0.githubusercontent.com 'self'; script-src 'unsafe-inline' 'self'; object-src https://ichemlabs.cloud.chemdoodle.com; frame-ancestors 'none';";
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of recommended SSL settings from
    # https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # set the correct host(s) for this site
    server_name odbx.science www.odbx.science;

    keepalive_timeout 60;

    # try a tilde here if this stops working
    # location ~ /.well-known/acme-challenge {
    location ~ /.well-known/acme-challenge {
        root /var/www/certbot;
        allow all;
    }

    # independently proxy css/js files to get the correct mime type
    location /css {
        root /app/static;
        include mime.types;
        add_header Content-Type text/css;
    }

    location /js {
        root /app/static;
        include mime.types;
        add_header Content-Type application/javascript;
    }

    location /favicon.ico {
        root /app/static;
        include mime.types;
        add_header Content-Type image/x-icon;
    }

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /*\n";
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn;
    }

  }

# REST SERVER CONFIGURATION
  server {
    listen 443 ssl;
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';";
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";


    # set the correct host(s) for your site
    server_name www.optimade.odbx.science optimade.odbx.science;

    keepalive_timeout 60;

    # try a tilde here if this stops working
    # location ~ /.well-known/acme-challenge {
    location ~ /.well-known/acme-challenge {
        root /var/www/certbot;
        allow all;
    }

    location /favicon.ico {
        root /app/static;
        include mime.types;
        add_header Content-Type image/x-icon;
    }

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /*\n";
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn_rest;
    }
  }

# TEST SERVER CONFIGURATION
  server {
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";


    # set the correct host(s) for your site
    server_name www.optimade-test.odbx.science optimade-test.odbx.science;

    keepalive_timeout 60;

    # try a tilde here if this stops working
    # location ~ /.well-known/acme-challenge {
    location ~ /.well-known/acme-challenge {
        root /var/www/certbot;
        allow all;
    }

    location /favicon.ico {
        root /app/static;
        include mime.types;
        add_header Content-Type image/x-icon;
    }

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /*\n";
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn_rest_test;
    }
  }

# INDEX META-DB SERVER CONFIGURATION
  server {
    listen 443 ssl;
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';";
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    # set the correct host(s) for your site
    server_name www.optimade-index.odbx.science optimade-index.odbx.science;

    keepalive_timeout 60;

    # try a tilde here if this stops working
    # location ~ /.well-known/acme-challenge {
    location ~ /.well-known/acme-challenge {
        root /var/www/certbot;
        allow all;
    }

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /*\n";
    }

    location /favicon.ico {
        root /app/static;
        include mime.types;
        add_header Content-Type image/x-icon;
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://gunicorn_index;
    }
  }

# Datalab
  server {
    listen 443 ssl;
    #add_header Content-Security-Policy ""
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    client_max_body_size 500M;

    # set the correct host(s) for your site
    server_name www.datalab.odbx.science datalab.odbx.science;

    keepalive_timeout 60;

    # try a tilde here if this stops working
    # location ~ /.well-known/acme-challenge {
    location ~ /.well-known/acme-challenge {
        root /var/www/certbot;
        allow all;
    }

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /*\n";
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://datalab;
      auth_basic "Password Required";
      auth_basic_user_file /keys/.htpasswd;
    }
  }

  server {
    listen 443 ssl;
    #add_header Content-Security-Policy ""
    ssl_certificate /etc/letsencrypt/live/www.odbx.science/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.odbx.science/privkey.pem;
    # copy of https://github.com/certbox/certbot/blob/master/certbox-nginx/certbox_nginx/_internal/tls_config/options-ssl-nginx.conf
    ssl_session_cache shared:le_nginx_SSL:10m;
    ssl_session_timeout 1440m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    client_max_body_size 500M;

    # set the correct host(s) for your site
    server_name www.api.odbx.science api.odbx.science;

    keepalive_timeout 60;

    # try a tilde here if this stops working
    # location ~ /.well-known/acme-challenge {
    location ~ /.well-known/acme-challenge {
        root /var/www/certbot;
        allow all;
    }

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /*\n";
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://pydatalab;
      limit_except OPTIONS {
          auth_basic "Password Required";
          auth_basic_user_file /keys/.htpasswd;
      }
    }
  }
}
